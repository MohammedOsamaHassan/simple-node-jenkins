pipeline {
    agent any

    environment {
        ACR_NAME = 'your-acr-name'
        ACR_LOGIN_SERVER = "${ACR_NAME}.azurecr.io"
        ACR_CREDENTIALS = credentials('acr-credentials')
        AKS_NAME = 'your-aks-cluster-name'
        AKS_RESOURCE_GROUP = 'your-resource-group'
        AZURE_CREDENTIALS = credentials('azure-credentials')
    }

    stages {
        stage('Cleanup') {
            steps {
                deleteDir()
            }
        }
        
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Backend') {
            steps {
                dir('backend') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }

        stage('Build and Push Docker Images') {
            steps {
                script {
                    docker.withRegistry("https://${ACR_LOGIN_SERVER}", 'acr-credentials') {
                        def backendImage = docker.build("${ACR_LOGIN_SERVER}/backend:${BUILD_NUMBER}", "-f Dockerfile.backend .")
                        backendImage.push()

                        def frontendImage = docker.build("${ACR_LOGIN_SERVER}/frontend:${BUILD_NUMBER}", "-f Dockerfile.frontend .")
                        frontendImage.push()
                    }
                }
            }
        }

        stage('Deploy to AKS') {
            steps {
                withCredentials([azureServicePrincipal('azure-credentials')]) {
                    sh """
                        az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID
                        az aks get-credentials --resource-group ${AKS_RESOURCE_GROUP} --name ${AKS_NAME}
                        
                        kubectl apply -f deployment.yaml
                    """
                }
            }
        }
    }
}